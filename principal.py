import tkinter as tk
from tkinter import ttk
from tkinter import messagebox as mb
from tkinter import scrolledtext as st
import conexion

class Cliente:
    def __init__(self):
        self.acciones = conexion.Ingresos()
        self.ventana1 = tk.Tk()
        self.ventana1.title("NoteBook")
        self.cuaderno1 = ttk.Notebook(self.ventana1)
        self.ventana1.iconbitmap('logo_remax.ico')
        self.ventana1.geometry("940x500")
        self.ventana1.resizable(0,0)
        self.ventana1.config(
            bg="gray90"
        )
        self.portada = tk.Label(self.ventana1)
        self.portada.config(
            bg="midnight blue",
            padx=720,
            pady=25
        )
        self.portada.grid(row=0, column=0)
        self.cinta = tk.Label(self.ventana1, text="Agenda Inmobiliaria")
        self.cinta.config(
            bg="red3",
            pady=3,
            padx=390,
            font=("Arial", 15, "bold"),
            fg="white"
        )
        self.cinta.grid(row=1, columnspan=18, sticky="nsw")  
        self.cargar()
        self.consultar()
        self.visualizar()
        self.borrado()
        self.cuaderno1.grid(row=2, columnspan=18, padx=10, pady=10, sticky="nsw")
        self.ventana1.mainloop()

        #Pantallas
    def cargar(self):
        self.pagina1 = ttk.Frame(self.cuaderno1)
        self.cuaderno1.add(self.pagina1, text="Registro Cliente")
        self.name = ttk.Label(self.pagina1,text="Nombre: ")
        self.name.grid(row=2, column=0,  padx=5, pady=5)
        self.carganame = tk.StringVar()
        self.campo_name = ttk.Entry(self.pagina1, textvariable=self.carganame)
        self.campo_name.grid(row=2, column=1)
        self.lastname = ttk.Label(self.pagina1,text="Apellido: ")
        self.lastname.grid(row=3, column=0,  padx=5, pady=5)
        self.cargalastname = tk.StringVar()
        self.campo_lastname = ttk.Entry(self.pagina1, textvariable=self.cargalastname)
        self.campo_lastname.grid(row=3, column=1)
        self.direccion = ttk.Label(self.pagina1,text="Dirección: ")
        self.direccion.grid(row=4, column=0,  padx=5, pady=5)
        self.cargadireccion = tk.StringVar()
        self.campo_direccion = ttk.Entry(self.pagina1, textvariable=self.cargadireccion)
        self.campo_direccion.grid(row=4, column=1)
        self.barrio = ttk.Label(self.pagina1,text="Barrio: ")
        self.barrio.grid(row=5, column=0,  padx=5, pady=5)
        self.cargabarrio = tk.StringVar()
        self.campo_barrio = ttk.Entry(self.pagina1, textvariable=self.cargabarrio)
        self.campo_barrio.grid(row=5, column=1)
        self.telefono = ttk.Label(self.pagina1,text="Telefono: ")
        self.telefono.grid(row=6, column=0,  padx=5, pady=5)
        self.cargatelefono = tk.StringVar()
        self.campo_telefono = ttk.Entry(self.pagina1, textvariable=self.cargatelefono)
        self.campo_telefono.grid(row=6, column=1)
        self.condicion = ttk.Label(self.pagina1,text="Cond. Propiedad: ")
        self.condicion.grid(row=7, column=0,  padx=5, pady=5)
        self.cargacondicion = tk.StringVar()
        self.campo_condicion = ttk.Entry(self.pagina1, textvariable=self.cargacondicion)
        self.campo_condicion.grid(row=7, column=1)
        self.ventaalquiler = ttk.Label(self.pagina1,text="¿Venta/Alquiler?: ")
        self.ventaalquiler.grid(row=8, column=0,  padx=5, pady=5)
        self.cargaventaalquiler = tk.StringVar()
        self.campo_ventaalquiler = ttk.Entry(self.pagina1, textvariable=self.cargaventaalquiler)
        self.campo_ventaalquiler.grid(row=8, column=1)
        self.mts2cubiertos = ttk.Label(self.pagina1,text="Mts2Cubiertos: ")
        self.mts2cubiertos.grid(row=9, column=0,  padx=5, pady=5)
        self.cargamts2cubiertos = tk.StringVar()
        self.campo_mts2cubiertos = ttk.Entry(self.pagina1, textvariable=self.cargamts2cubiertos)
        self.campo_mts2cubiertos.grid(row=9, column=1)
        self.mts2descubiertos = ttk.Label(self.pagina1,text="Mts2Descubiertos: ")
        self.mts2descubiertos.grid(row=10, column=0,  padx=5, pady=5)
        self.cargamts2descubiertos = tk.StringVar()
        self.campo_mts2descubiertos = ttk.Entry(self.pagina1, textvariable=self.cargamts2descubiertos)
        self.campo_mts2descubiertos.grid(row=10, column=1)
        self.mts2valorestrenar = ttk.Label(self.pagina1,text="Mts2ValorEstrenar: ")
        self.mts2valorestrenar.grid(row=2, column=2,  padx=5, pady=5)
        self.cargamts2valorestrenar = tk.StringVar()
        self.campo_mts2valorestrenar = ttk.Entry(self.pagina1, textvariable=self.cargamts2valorestrenar)
        self.campo_mts2valorestrenar.grid(row=2, column=3)
        self.mts2valorventa = ttk.Label(self.pagina1,text="Mts2ValorVenta: ")
        self.mts2valorventa.grid(row=3, column=2,  padx=5, pady=5)
        self.cargamts2valorventa = tk.StringVar()
        self.campo_mts2valorventa = ttk.Entry(self.pagina1, textvariable=self.cargamts2valorventa)
        self.campo_mts2valorventa.grid(row=3, column=3)
        self.valortotal = ttk.Label(self.pagina1,text="ValorTotal: ")
        self.valortotal.grid(row=4, column=2,  padx=5, pady=5)
        self.cargavalortotal = tk.StringVar()
        self.campo_valortotal = ttk.Entry(self.pagina1, textvariable=self.cargavalortotal)
        self.campo_valortotal.grid(row=4, column=3)
        self.hijos = ttk.Label(self.pagina1,text="Hijos: ")
        self.hijos.grid(row=5, column=2,  padx=5, pady=5)
        self.cargahijos = tk.StringVar()
        self.campo_hijos = ttk.Entry(self.pagina1, textvariable=self.cargahijos)
        self.campo_hijos.grid(row=5, column=3)
        self.mascotas = ttk.Label(self.pagina1,text="Mascotas: ")
        self.mascotas.grid(row=6, column=2,  padx=5, pady=5)
        self.cargamascotas = tk.StringVar()
        self.campo_mascotas = ttk.Entry(self.pagina1, textvariable=self.cargamascotas)
        self.campo_mascotas.grid(row=6, column=3)
        self.profesion = ttk.Label(self.pagina1,text="Profesión: ")
        self.profesion.grid(row=7, column=2,  padx=5, pady=5)
        self.cargaprofesion = tk.StringVar()
        self.campo_profesion = ttk.Entry(self.pagina1, textvariable=self.cargaprofesion)
        self.campo_profesion.grid(row=7, column=3)
        self.fechaprofesion = ttk.Label(self.pagina1,text="FechaProfesión: ")
        self.fechaprofesion.grid(row=8, column=2,  padx=5, pady=5)
        self.cargafechaprofesion = tk.StringVar()
        self.campo_fechaprofesion = ttk.Entry(self.pagina1, textvariable=self.cargafechaprofesion)
        self.campo_fechaprofesion.grid(row=8, column=3)
        self.observaciones = ttk.Label(self.pagina1,text="Observaciones: ")
        self.observaciones.grid(row=9, column=2,  padx=5, pady=5)
        self.cargaobservaciones = tk.StringVar()
        self.campo_observaciones = ttk.Entry(self.pagina1, textvariable=self.cargaobservaciones)
        self.campo_observaciones.grid(row=9, column=3)
        self.boton1 = ttk.Button(self.pagina1, text="Confirmar", command=self.agregar)
        self.boton1.grid(column=1, row=11, padx=4, pady=4)
        self.boton2 = ttk.Button(self.pagina1, text="Salir", command=self.ventana1.quit)
        self.boton2.grid(column=3, row=11, padx=4, pady=4)

    def agregar(self):
        datos=(self.carganame.get(), self.cargalastname.get(), self.cargadireccion.get(), self.cargabarrio.get(), self.cargatelefono.get(), self.cargacondicion.get(), self.cargaventaalquiler.get(), self.cargamts2cubiertos.get(), self.cargamts2descubiertos.get(), self.cargamts2valorestrenar.get(), self.cargamts2valorventa.get(), self.cargavalortotal.get(), self.cargahijos.get(), self.cargamascotas.get(), self.cargaprofesion.get(), self.cargafechaprofesion.get(), self.cargaobservaciones.get())
        self.acciones.alta(datos)
        mb.showinfo("Información", "Los datos fueron cargados")
        self.carganame.set("")
        self.cargalastname.set("")
        self.cargadireccion.set("")
        self.cargabarrio.set("")
        self.cargatelefono.set("")
        self.cargacondicion.set("")
        self.cargaventaalquiler.set("")
        self.cargamts2cubiertos.set("")
        self.cargamts2descubiertos.set("")
        self.cargamts2valorestrenar.set("")
        self.cargamts2valorventa.set("")
        self.cargavalortotal.set("")
        self.cargahijos.set("")
        self.cargamascotas.set("")
        self.cargaprofesion.set("")
        self.cargafechaprofesion.set("")
        self.cargaobservaciones.set("")
        
    def consultar(self):
        self.pagina2 = ttk.Frame(self.cuaderno1)
        self.cuaderno1.add(self.pagina2, text="Consulta Cliente")
        self.nombre = ttk.Label(self.pagina2,text="Nombre: ")
        self.nombre.grid(row=2, column=0,  padx=5, pady=5)
        self.salirnombre = tk.StringVar()
        self.campo_nombre = ttk.Entry(self.pagina2, textvariable=self.salirnombre)
        self.campo_nombre.grid(row=2, column=1)
        self.apellido = ttk.Label(self.pagina2,text="Apellido: ")
        self.apellido.grid(row=3, column=0,  padx=5, pady=5)
        self.salirapellido = tk.StringVar()
        self.campo_apellido = ttk.Entry(self.pagina2, textvariable=self.salirapellido)
        self.campo_apellido.grid(row=3, column=1)
        self.direccion = ttk.Label(self.pagina2,text="Direccion: ")
        self.direccion.grid(row=4, column=0,  padx=5, pady=5)
        self.salirdireccion = tk.StringVar()
        self.campo_direccion = ttk.Entry(self.pagina2, textvariable=self.salirdireccion, state="readonly")
        self.campo_direccion.grid(row=4, column=1)
        self.barrio = ttk.Label(self.pagina2,text="Barrio: ")
        self.barrio.grid(row=5, column=0,  padx=5, pady=5)
        self.salirbarrio = tk.StringVar()
        self.campo_barrio = ttk.Entry(self.pagina2, textvariable=self.salirbarrio, state="readonly")
        self.campo_barrio.grid(row=5, column=1)
        self.telefono = ttk.Label(self.pagina2,text="Telefono: ")
        self.telefono.grid(row=6, column=0,  padx=5, pady=5)
        self.salirtelefono = tk.StringVar()
        self.campo_telefono = ttk.Entry(self.pagina2, textvariable=self.salirtelefono, state="readonly")
        self.campo_telefono.grid(row=6, column=1)
        self.condicion = ttk.Label(self.pagina2,text="Cond. Propiedad: ")
        self.condicion.grid(row=7, column=0,  padx=5, pady=5)
        self.salircondicion = tk.StringVar()
        self.campo_condicion = ttk.Entry(self.pagina2, textvariable=self.salircondicion, state="readonly")
        self.campo_condicion.grid(row=7, column=1)
        self.ventaalquiler = ttk.Label(self.pagina2,text="¿Venta/Alquiler?: ")
        self.ventaalquiler.grid(row=8, column=0,  padx=5, pady=5)
        self.salirventaalquiler = tk.StringVar()
        self.campo_ventaalquiler = ttk.Entry(self.pagina2, textvariable=self.salirventaalquiler, state="readonly")
        self.campo_ventaalquiler.grid(row=8, column=1)
        self.mts2cubiertos = ttk.Label(self.pagina2,text="Mts2Cubiertos: ")
        self.mts2cubiertos.grid(row=9, column=0,  padx=5, pady=5)
        self.salirmts2cubiertos = tk.StringVar()
        self.campo_mts2cubiertos = ttk.Entry(self.pagina2, textvariable=self.salirmts2cubiertos, state="readonly")
        self.campo_mts2cubiertos.grid(row=9, column=1)
        self.mts2descubiertos = ttk.Label(self.pagina2,text="Mts2Descubiertos: ")
        self.mts2descubiertos.grid(row=10, column=0,  padx=5, pady=5)
        self.salirmts2descubiertos = tk.StringVar()
        self.campo_mts2descubiertos = ttk.Entry(self.pagina2, textvariable=self.salirmts2descubiertos, state="readonly")
        self.campo_mts2descubiertos.grid(row=10, column=1)
        self.mts2valorestrenar = ttk.Label(self.pagina2,text="Mts2ValorEstrenar: ")
        self.mts2valorestrenar.grid(row=2, column=2,  padx=5, pady=5)
        self.salirmts2valorestrenar = tk.StringVar()
        self.campo_mts2valorestrenar = ttk.Entry(self.pagina2, textvariable=self.salirmts2valorestrenar, state="readonly")
        self.campo_mts2valorestrenar.grid(row=2, column=3)
        self.mts2valorventa = ttk.Label(self.pagina2,text="Mts2ValorVenta: ")
        self.mts2valorventa.grid(row=3, column=2,  padx=5, pady=5)
        self.salirmts2valorventa = tk.StringVar()
        self.campo_mts2valorventa = ttk.Entry(self.pagina2, textvariable=self.salirmts2valorventa, state="readonly")
        self.campo_mts2valorventa.grid(row=3, column=3)
        self.valortotal = ttk.Label(self.pagina2,text="ValorTotal: ")
        self.valortotal.grid(row=4, column=2,  padx=5, pady=5)
        self.salirvalortotal = tk.StringVar()
        self.campo_valortotal = ttk.Entry(self.pagina2, textvariable=self.salirvalortotal, state="readonly")
        self.campo_valortotal.grid(row=4, column=3)
        self.hijos = ttk.Label(self.pagina2,text="Hijos: ")
        self.hijos.grid(row=5, column=2,  padx=5, pady=5)
        self.salirhijos = tk.StringVar()
        self.campo_hijos = ttk.Entry(self.pagina2, textvariable=self.salirhijos, state="readonly")
        self.campo_hijos.grid(row=5, column=3)
        self.mascotas = ttk.Label(self.pagina2,text="Mascotas: ")
        self.mascotas.grid(row=6, column=2,  padx=5, pady=5)
        self.salirmascotas = tk.StringVar()
        self.campo_mascotas = ttk.Entry(self.pagina2, textvariable=self.salirmascotas,state="readonly")
        self.campo_mascotas.grid(row=6, column=3)
        self.profesion = ttk.Label(self.pagina2,text="Profesión: ")
        self.profesion.grid(row=7, column=2,  padx=5, pady=5)
        self.salirprofesion = tk.StringVar()
        self.campo_profesion = ttk.Entry(self.pagina2, textvariable=self.salirprofesion, state="readonly")
        self.campo_profesion.grid(row=7, column=3)
        self.fechaprofesion = ttk.Label(self.pagina2,text="FechaProfesión: ")
        self.fechaprofesion.grid(row=8, column=2,  padx=5, pady=5)
        self.salirfechaprofesion = tk.StringVar()
        self.campo_fechaprofesion = ttk.Entry(self.pagina2, textvariable=self.salirfechaprofesion, state="readonly")
        self.campo_fechaprofesion.grid(row=8, column=3)
        self.observaciones = ttk.Label(self.pagina2,text="Observaciones: ")
        self.observaciones.grid(row=9, column=2,  padx=5, pady=5)
        self.salirobservaciones = tk.StringVar()
        self.campo_observaciones = ttk.Entry(self.pagina2, textvariable=self.salirobservaciones, state="readonly")
        self.campo_observaciones.grid(row=9, column=3)
        self.boton1 = ttk.Button(self.pagina2, text="Consultar", command=self.traer)
        self.boton1.grid(column=1, row=11, padx=4, pady=4)
        self.boton2 = ttk.Button(self.pagina2, text="Salir", command=self.ventana1.quit)
        self.boton2.grid(column=3, row=11, padx=4, pady=4)


    def traer(self):
        datos=(self.salirnombre.get(), self.salirapellido.get())
        respuesta=self.acciones.consulta(datos)
        if len(respuesta)>0:
            self.salirdireccion.set(respuesta[0][3])
            self.salirbarrio.set(respuesta[0][4])
            self.salirtelefono.set(respuesta[0][5])
            self.salircondicion.set(respuesta[0][6])
            self.salirventaalquiler.set(respuesta[0][7])
            self.salirmts2cubiertos.set(respuesta[0][8])
            self.salirmts2descubiertos.set(respuesta[0][9])
            self.salirmts2valorestrenar.set(respuesta[0][10])
            self.salirmts2valorventa.set(respuesta[0][11])
            self.salirvalortotal.set(respuesta[0][12])
            self.salirhijos.set(respuesta[0][13])
            self.salirmascotas.set(respuesta[0][14])
            self.salirprofesion.set(respuesta[0][15])
            self.salirfechaprofesion.set(respuesta[0][16])
            self.salirobservaciones.set(respuesta[0][17])
        else:
            self.salirnombre.set('')
            self.salirapellido.set('')
            mb.showinfo("Información", "No existe el cliente..Intenta de nuevo")

    def visualizar(self):
        self.pagina3 = ttk.Frame(self.cuaderno1)
        self.cuaderno1.add(self.pagina3, text="Listado Clientes")
        self.labelframe3=ttk.LabelFrame(self.pagina3, text="Clientes")
        self.labelframe3.grid(column=0, row=0, padx=5, pady=10)
        self.boton1=ttk.Button(self.labelframe3, text="Listado completo",command=self.listar)
        self.boton1.grid(column=0, row=0, padx=4, pady=4)
        self.scrolledtext1=st.ScrolledText(self.labelframe3, width=110, height=14)
        self.scrolledtext1.config(
            bg="gray59",
            
        )
        self.scrolledtext1.grid(column=0,row=1, padx=10, pady=10)      

    def listar(self):
        respuesta=self.acciones.todo()
        self.scrolledtext1.delete("1.0", tk.END)        
        for fila in respuesta:
            self.scrolledtext1.insert(tk.END, "ID:"+str(fila[0])+"\nNombre:"+fila[1]+"\nApellido:"+fila[2]+"\nDireccion:"+str(fila[3])+"\nBarrio:"+fila[4]+"\nTelefono:"+str(fila[5])+"\nCond_Propiedad:"+fila[6]+"\n¿Venta_Alquiler?:"+fila[7]+"\nMts2Cubiertos:"+str(fila[8])+"\nMts2Descubiertos:"+str(fila[9])+"\nMts2ValorEstrenar:"+str(fila[10])+"\nMts2ValorVenta:"+str(fila[11])+"\nValorTotal:"+str(fila[12])+"\nHijos:"+fila[13]+"\nMascotas:"+fila[14]+"\nProfesion:"+fila[15]+"\nFecha_Profesión:"+str(fila[16])+"\nObservaciones:"+fila[17]+"\n\n")
             
    def borrado(self):
        self.pagina4 = ttk.Frame(self.cuaderno1)
        self.cuaderno1.add(self.pagina4, text="Eliminar Cliente")
        self.elnombre = ttk.Label(self.pagina4,text="Nombre: ")
        self.elnombre.grid(row=3, column=0,  padx=5, pady=10)
        self.mostrarnombre = tk.StringVar()
        self.campo_elnombre = ttk.Entry(self.pagina4, textvariable=self.mostrarnombre)
        self.campo_elnombre.grid(row=3, column=1)
        self.elapellido = ttk.Label(self.pagina4,text="Apellido: ")
        self.elapellido.grid(row=4, column=0,  padx=5, pady=10)
        self.mostrarapellido = tk.StringVar()
        self.campo_elapellido = ttk.Entry(self.pagina4, textvariable=self.mostrarapellido)
        self.campo_elapellido.grid(row=4, column=1)
        self.boton1=ttk.Button(self.pagina4, text="Eliminar",command=self.borrar)
        self.boton1.grid(column=0, row=6, padx=4, pady=4)

    def borrar(self):
        datos=(self.mostrarnombre.get(), self.mostrarapellido.get())
        cantidad=self.acciones.baja(datos)
        if cantidad==1:
            mb.showinfo("Información","Se ha eliminado al cliente!!")
        else:
            mb.showinfo("No existe el cliente!!")

aplicacion = Cliente()



